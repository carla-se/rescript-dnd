// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Nav from "./components/Nav.bs.js";
import * as Main from "./components/Main.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Route from "./Route.bs.js";
import * as React from "react";
import * as Example from "./components/Example.bs.js";
import * as CardBoard from "./examples/CardBoard.bs.js";
import * as Container from "./components/Container.bs.js";
import * as SimpleList from "./examples/SimpleList.bs.js";
import * as JsxPPXReactSupport from "rescript/lib/es6/jsxPPXReactSupport.js";
import * as NestedVerticalLists from "./examples/NestedVerticalLists.bs.js";
import * as RescriptReactRouter from "@rescript/react/src/RescriptReactRouter.bs.js";

function reducer(_state, action) {
  if (action) {
    return {
            mobileNavShown: false
          };
  } else {
    return {
            mobileNavShown: true
          };
  }
}

function App(props) {
  var url = RescriptReactRouter.useUrl(undefined, undefined);
  var route = React.useMemo((function () {
          return Route.fromUrl(url);
        }), [url]);
  var match = React.useReducer(reducer, {
        mobileNavShown: false
      });
  var dispatch = match[1];
  React.useEffect((function () {
          Curry._1(dispatch, /* HideMobileNav */1);
        }), [route]);
  var showMobileNav = React.useCallback(function (param) {
        Curry._1(dispatch, /* ShowMobileNav */0);
      });
  var hideMobileNav = React.useCallback(function (param) {
        Curry._1(dispatch, /* HideMobileNav */1);
      });
  var tmp;
  switch (route) {
    case /* VerticalList */0 :
        tmp = JsxPPXReactSupport.createElementWithKey(url.hash, Example.Dynamic.make, {
              title: "Vertical list",
              layout: /* Vertical */0,
              showMobileNav: showMobileNav,
              initialAmount: 7,
              children: (function (n) {
                  return JsxPPXReactSupport.createElementWithKey(String(n), SimpleList.make, {
                              n: n,
                              axis: /* Y */1
                            });
                })
            });
        break;
    case /* HorizontalList */1 :
        tmp = JsxPPXReactSupport.createElementWithKey(url.hash, Example.Dynamic.make, {
              title: "Horizontal list",
              layout: /* Horizontal */1,
              showMobileNav: showMobileNav,
              initialAmount: 7,
              children: (function (n) {
                  return JsxPPXReactSupport.createElementWithKey(String(n), SimpleList.make, {
                              n: n,
                              axis: /* X */0
                            });
                })
            });
        break;
    case /* VerticalScrollableContainer */2 :
        tmp = JsxPPXReactSupport.createElementWithKey(url.hash, Example.Dynamic.make, {
              title: "Vertical scrollable container",
              layout: /* Vertical */0,
              scrollable: true,
              showMobileNav: showMobileNav,
              initialAmount: 50,
              children: (function (n) {
                  return JsxPPXReactSupport.createElementWithKey(String(n), SimpleList.make, {
                              n: n,
                              axis: /* Y */1
                            });
                })
            });
        break;
    case /* HorizontalScrollableContainer */3 :
        tmp = JsxPPXReactSupport.createElementWithKey(url.hash, Example.Dynamic.make, {
              title: "Horizontal scrollable container",
              layout: /* Horizontal */1,
              scrollable: true,
              showMobileNav: showMobileNav,
              initialAmount: 50,
              children: (function (n) {
                  return JsxPPXReactSupport.createElementWithKey(String(n), SimpleList.make, {
                              n: n,
                              axis: /* X */0
                            });
                })
            });
        break;
    case /* CardBoard */4 :
        tmp = JsxPPXReactSupport.createElementWithKey(url.hash, Example.Static.make, {
              title: "Card board",
              layout: /* CardBoard */2,
              showMobileNav: showMobileNav,
              children: React.createElement(CardBoard.make, {})
            });
        break;
    case /* NestedVerticalLists */5 :
        tmp = JsxPPXReactSupport.createElementWithKey(url.hash, Example.Static.make, {
              title: "Nested vertical list",
              layout: /* Vertical */0,
              showMobileNav: showMobileNav,
              children: React.createElement(NestedVerticalLists.make, {})
            });
        break;
    
  }
  return React.createElement(Container.make, {
              children: null
            }, React.createElement(Nav.make, {
                  route: route,
                  mobileNavShown: match[0].mobileNavShown,
                  hideMobileNav: hideMobileNav
                }), React.createElement(Main.make, {
                  children: tmp
                }));
}

var make = App;

export {
  reducer ,
  make ,
}
/* Nav Not a pure module */
